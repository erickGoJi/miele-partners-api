// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication.Models;

namespace WebApplication.Migrations
{
    [DbContext(typeof(MieleContext))]
    [Migration("20190417161244_rel_comisiones1")]
    partial class rel_comisiones1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication.Models.accesorios_relacionados", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("id_producto_padre");

                    b.Property<int>("id_producto_recomendado");

                    b.HasKey("id");

                    b.ToTable("AccesoriosRelacionados");
                });

            modelBuilder.Entity("WebApplication.Models.afectacion_cc", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("id_condiones_comerciales_sucursal");

                    b.Property<int>("id_promocion");

                    b.Property<int>("margen");

                    b.HasKey("id");

                    b.HasIndex("id_condiones_comerciales_sucursal");

                    b.HasIndex("id_promocion");

                    b.ToTable("afectacion_cc");
                });

            modelBuilder.Entity("WebApplication.Models.beneficio_desc", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cantidad");

                    b.Property<bool>("es_porcentaje");

                    b.Property<int>("id_promocion");

                    b.HasKey("id");

                    b.HasIndex("id_promocion");

                    b.ToTable("beneficio_desc");
                });

            modelBuilder.Entity("WebApplication.Models.beneficio_msi", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("id_cat_msi");

                    b.Property<int>("id_promocion");

                    b.HasKey("id");

                    b.HasIndex("id_cat_msi");

                    b.HasIndex("id_promocion");

                    b.ToTable("beneficio_msi");
                });

            modelBuilder.Entity("WebApplication.Models.beneficio_productos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cantidad");

                    b.Property<int>("id_producto");

                    b.Property<int>("id_promocion");

                    b.HasKey("id");

                    b.HasIndex("id_promocion");

                    b.ToTable("beneficio_productos");
                });

            modelBuilder.Entity("WebApplication.Models.beneficios_promocion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("id_cat_beneficios");

                    b.Property<int>("id_promocion");

                    b.HasKey("id");

                    b.HasIndex("id_cat_beneficios");

                    b.HasIndex("id_promocion");

                    b.ToTable("beneficios_promocion");
                });

            modelBuilder.Entity("WebApplication.Models.Canales", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Canales");
                });

            modelBuilder.Entity("WebApplication.Models.Caracteristica_Base", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descripcion");

                    b.Property<bool>("estatus");

                    b.HasKey("id");

                    b.ToTable("caracteristicas_Bases");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Accesorios", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("actualizado");

                    b.Property<long>("actualizadopor");

                    b.Property<string>("atributos");

                    b.Property<DateTime>("creado");

                    b.Property<long>("creadopor");

                    b.Property<string>("descripcion_corta");

                    b.Property<string>("descripcion_larga");

                    b.Property<bool>("estatus");

                    b.Property<string>("ficha_tecnica");

                    b.Property<string>("modelo");

                    b.Property<string>("nombre");

                    b.Property<string>("precio_con_iva");

                    b.Property<string>("precio_sin_iva");

                    b.Property<string>("sku");

                    b.HasKey("id");

                    b.ToTable("Cat_Accesorios");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Accesorios_Relacionados", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("estatus");

                    b.Property<int>("id_Accesorio");

                    b.Property<string>("sku_sugerido");

                    b.HasKey("id");

                    b.HasIndex("id_Accesorio");

                    b.ToTable("Cat_Accesorios_Relacionados");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Actividad", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("desc_actividad");

                    b.Property<bool>("estatus");

                    b.HasKey("id");

                    b.ToTable("Cat_Actividad");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Aplicaciones", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("App");

                    b.Property<string>("Descripcion");

                    b.HasKey("id");

                    b.ToTable("Cat_Aplicaciones");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Area_Cobertura", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("desc_cobertura");

                    b.Property<bool>("estatus");

                    b.HasKey("id");

                    b.ToTable("Cat_Area_Cobertura");
                });

            modelBuilder.Entity("WebApplication.Models.cat_beneficios", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("beneficio");

                    b.HasKey("id");

                    b.ToTable("cat_beneficios");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_canales", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Canal_en");

                    b.Property<string>("Canal_es");

                    b.HasKey("Id");

                    b.ToTable("Cat_canales");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Categoria_Producto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("codigo");

                    b.Property<string>("descripcion");

                    b.Property<bool>("estatus");

                    b.HasKey("id");

                    b.ToTable("Cat_Categoria_Producto");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Categoria_Servicio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("desc_categoria_servicio");

                    b.Property<bool>("estatus");

                    b.Property<int>("id_tipo_servicio");

                    b.HasKey("id");

                    b.ToTable("Cat_Categoria_Servicio");
                });

            modelBuilder.Entity("WebApplication.Models.cat_checklist_producto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("desc_checklist_producto");

                    b.Property<bool>("estatus");

                    b.HasKey("id");

                    b.ToTable("Cat_Checklist_Producto");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_CondicionesComerciales", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("activa");

                    b.Property<string>("condicion_comercial");

                    b.Property<float>("meses_credito");

                    b.Property<float>("monto_descuento");

                    b.Property<float>("num_meses_sinint");

                    b.Property<float>("porcentaje_credito");

                    b.Property<float>("porcentaje_descuento");

                    b.Property<string>("tipo");

                    b.HasKey("id");

                    b.ToTable("Cat_CondicionesComerciales");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_CondicionesPago", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("id_Cat_Formas_Pago");

                    b.Property<long>("id_cuenta");

                    b.HasKey("id");

                    b.HasIndex("id_Cat_Formas_Pago");

                    b.HasIndex("id_cuenta");

                    b.ToTable("Cat_CondicionesPago");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Cuentas", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cuenta_en");

                    b.Property<string>("Cuenta_es");

                    b.Property<long>("Id_Canal");

                    b.HasKey("Id");

                    b.HasIndex("Id_Canal");

                    b.ToTable("Cat_Cuentas");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Direccion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Fecha_Estimada");

                    b.Property<DateTime>("actualizado");

                    b.Property<long>("actualizadopor");

                    b.Property<string>("calle_numero");

                    b.Property<string>("colonia");

                    b.Property<string>("cp");

                    b.Property<DateTime>("creado");

                    b.Property<long>("creadopor");

                    b.Property<bool>("estatus");

                    b.Property<long>("id_cliente");

                    b.Property<int>("id_estado");

                    b.Property<int>("id_localidad");

                    b.Property<int>("id_municipio");

                    b.Property<int>("id_prefijo_calle");

                    b.Property<string>("nombrecontacto");

                    b.Property<string>("numExt");

                    b.Property<string>("numInt");

                    b.Property<string>("telefono");

                    b.Property<string>("telefono_movil");

                    b.Property<int?>("tipo_direccion");

                    b.HasKey("id");

                    b.HasIndex("id_cliente");

                    b.ToTable("Cat_Direccion");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Direccion_sucursales", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Fecha_Estimada");

                    b.Property<DateTime>("actualizado");

                    b.Property<long>("actualizadopor");

                    b.Property<string>("calle_numero");

                    b.Property<string>("colonia");

                    b.Property<string>("cp");

                    b.Property<DateTime>("creado");

                    b.Property<long>("creadopor");

                    b.Property<bool>("estatus");

                    b.Property<int>("id_estado");

                    b.Property<int>("id_localidad");

                    b.Property<int>("id_municipio");

                    b.Property<int>("id_prefijo_calle");

                    b.Property<int>("id_sucursales");

                    b.Property<string>("nombrecontacto");

                    b.Property<string>("numExt");

                    b.Property<string>("numInt");

                    b.Property<string>("telefono");

                    b.Property<string>("telefono_movil");

                    b.Property<int?>("tipo_direccion");

                    b.HasKey("id");

                    b.HasIndex("id_sucursales");

                    b.ToTable("cat_direccion_sucursales");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_distribuidor_autorizado", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("desc_distribuidor");

                    b.Property<bool>("estatus");

                    b.HasKey("id");

                    b.ToTable("Cat_distribuidor_autorizado");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Estado", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("desc_estado");

                    b.Property<bool>("estatus");

                    b.HasKey("id");

                    b.ToTable("Cat_Estado");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Estatus_Compra", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estatus_en");

                    b.Property<string>("Estatus_es");

                    b.HasKey("Id");

                    b.ToTable("Cat_Estatus_Compra");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Estatus_Cotizacion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estatus_en");

                    b.Property<string>("Estatus_es");

                    b.HasKey("id");

                    b.ToTable("Cat_Estatus_Cotizacion");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_estatus_servicio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("desc_estatus_servicio");

                    b.Property<string>("desc_estatus_servicio_en");

                    b.Property<bool>("estatus");

                    b.Property<int>("id_tipo_servicio");

                    b.HasKey("id");

                    b.ToTable("Cat_estatus_servicio");
                });

            modelBuilder.Entity("WebApplication.Models.cat_falla", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("desc_falla_en");

                    b.Property<string>("desc_falla_es");

                    b.Property<bool>("estatus");

                    b.HasKey("id");

                    b.ToTable("cat_falla");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Formas_Pago", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FormaPago");

                    b.Property<bool>("comprobantes_obligatorios");

                    b.HasKey("id");

                    b.ToTable("Cat_Formas_Pago");
                });

            modelBuilder.Entity("WebApplication.Models.cat_garantia", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("desc_garantia");

                    b.Property<bool>("garantia");

                    b.HasKey("id");

                    b.ToTable("cat_garantia");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Imagenes_Accesosrios", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("estatus");

                    b.Property<int>("id_Accesorio");

                    b.Property<string>("url");

                    b.HasKey("id");

                    b.HasIndex("id_Accesorio");

                    b.ToTable("Cat_Imagenes_Accesosrios");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Imagenes_Producto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("estatus");

                    b.Property<int>("id_producto");

                    b.Property<string>("url");

                    b.HasKey("id");

                    b.HasIndex("id_producto");

                    b.ToTable("Cat_Imagenes_Producto");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Linea_Producto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descripcion");

                    b.Property<bool>("estatus");

                    b.Property<int>("id_superlinea");

                    b.HasKey("id");

                    b.HasIndex("id_superlinea");

                    b.ToTable("Cat_Linea_Producto");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Lista_Precios", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("estatus");

                    b.Property<string>("grupo_precio");

                    b.Property<decimal>("precio_sin_iva");

                    b.HasKey("id");

                    b.ToTable("Cat_Lista_Precios");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Localidad", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("cp");

                    b.Property<string>("desc_localidad");

                    b.Property<bool>("estatus");

                    b.Property<int?>("municipioid");

                    b.Property<string>("zona");

                    b.HasKey("id");

                    b.HasIndex("municipioid");

                    b.ToTable("Cat_Localidad");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Materiales", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("cantidad");

                    b.Property<string>("descripcion");

                    b.Property<bool>("estatus");

                    b.Property<int>("id_grupo_precio");

                    b.Property<string>("no_material");

                    b.HasKey("id");

                    b.HasIndex("id_grupo_precio");

                    b.ToTable("Cat_Materiales");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Materiales_Tecnico", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cantidad");

                    b.Property<bool>("estatus");

                    b.Property<int>("id_material");

                    b.Property<int?>("id_tecnico");

                    b.HasKey("id");

                    b.ToTable("Cat_Materiales_Tecnico");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Motivo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("correo");

                    b.Property<string>("descripcion");

                    b.Property<bool>("estatus");

                    b.HasKey("id");

                    b.ToTable("cat_Motivos");
                });

            modelBuilder.Entity("WebApplication.Models.cat_msi", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("desc_msi");

                    b.HasKey("id");

                    b.ToTable("cat_msi");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Municipio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("desc_municipio");

                    b.Property<int?>("estadoid");

                    b.Property<bool>("estatus");

                    b.HasKey("id");

                    b.HasIndex("estadoid");

                    b.ToTable("Cat_Municipio");
                });

            modelBuilder.Entity("WebApplication.Models.cat_periodo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("desc_periodio");

                    b.HasKey("id");

                    b.ToTable("cat_periodo");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Producto", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("desc_producto");

                    b.Property<bool>("estatus");

                    b.HasKey("id");

                    b.ToTable("Cat_Producto");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Productos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("actualizado");

                    b.Property<long>("actualizadopor");

                    b.Property<string>("atributos");

                    b.Property<DateTime>("creado");

                    b.Property<long>("creadopor");

                    b.Property<string>("descripcion_corta");

                    b.Property<string>("descripcion_larga");

                    b.Property<bool>("estatus");

                    b.Property<string>("ficha_tecnica");

                    b.Property<int?>("horas_tecnico");

                    b.Property<int>("id_caracteristica_base");

                    b.Property<int>("id_categoria");

                    b.Property<int?>("id_linea");

                    b.Property<int?>("id_sublinea");

                    b.Property<string>("modelo");

                    b.Property<string>("no_serie");

                    b.Property<int?>("no_tecnico");

                    b.Property<string>("nombre");

                    b.Property<float>("precio_con_iva");

                    b.Property<decimal?>("precio_hora");

                    b.Property<float>("precio_sin_iva");

                    b.Property<bool>("requiere_instalacion");

                    b.Property<string>("sku");

                    b.Property<int>("tipo");

                    b.Property<string>("url_guia");

                    b.Property<string>("url_impresion");

                    b.Property<string>("url_manual");

                    b.Property<bool>("visible_partners");

                    b.HasKey("id");

                    b.HasIndex("id_caracteristica_base");

                    b.HasIndex("id_linea");

                    b.HasIndex("id_sublinea");

                    b.ToTable("Cat_Productos");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Productos_Estatus_Troubleshooting", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("codigo");

                    b.Property<string>("desc_troubleshooting");

                    b.Property<bool>("estatus");

                    b.HasKey("id");

                    b.ToTable("Cat_Productos_Estatus_Troubleshooting");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Productos_Preguntas_Troubleshooting", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Cat_Productosid");

                    b.Property<DateTime>("actualizado");

                    b.Property<long>("actualizadopor");

                    b.Property<DateTime>("creado");

                    b.Property<long>("creadopor");

                    b.Property<bool>("estatus");

                    b.Property<int>("id_problema");

                    b.Property<string>("pregunta");

                    b.HasKey("id");

                    b.HasIndex("Cat_Productosid");

                    b.ToTable("Cat_Productos_Preguntas_Troubleshooting");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Productos_Problema_Troubleshooting", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("actualizado");

                    b.Property<long>("actualizadopor");

                    b.Property<DateTime>("creado");

                    b.Property<long>("creadopor");

                    b.Property<bool>("estatus");

                    b.Property<string>("modelo");

                    b.Property<string>("problema");

                    b.HasKey("id");

                    b.ToTable("Cat_Productos_Problema_Troubleshooting");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Productos_Respuestas_Troubleshooting", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("actualizado");

                    b.Property<long>("actualizadopor");

                    b.Property<DateTime>("creado");

                    b.Property<long>("creadopor");

                    b.Property<bool>("estatus");

                    b.Property<string>("falla");

                    b.Property<int>("id_pregunta");

                    b.Property<string>("solucion");

                    b.HasKey("id");

                    b.ToTable("Cat_Productos_Respuestas_Troubleshooting");
                });

            modelBuilder.Entity("WebApplication.Models.cat_reparacion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("desc_reparacion_en");

                    b.Property<string>("desc_reparacion_es");

                    b.Property<bool>("estatus");

                    b.HasKey("id");

                    b.ToTable("cat_reparacion");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Roles", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("rol");

                    b.Property<string>("siglas");

                    b.HasKey("id");

                    b.ToTable("Cat_Roles");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Servicio_Sin_Pago", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estatus");

                    b.Property<string>("nombre");

                    b.HasKey("id");

                    b.ToTable("Servicio_Sin_Pagos");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_solicitado_por", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("desc_solicitado_por");

                    b.Property<bool>("estatus");

                    b.HasKey("id");

                    b.ToTable("Cat_solicitado_por");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_solicitud_via", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("desc_solicitud_via");

                    b.Property<bool>("estatus");

                    b.HasKey("id");

                    b.ToTable("Cat_solicitud_via");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_SubLinea_Producto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descripcion");

                    b.Property<bool>("estatus");

                    b.Property<int>("id_linea_producto");

                    b.HasKey("id");

                    b.HasIndex("id_linea_producto");

                    b.ToTable("Cat_SubLinea_Producto");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Sucursales", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Id_Cuenta");

                    b.Property<string>("Sucursal");

                    b.Property<float>("margen_vendedores");

                    b.Property<string>("tipo");

                    b.Property<string>("url_logo");

                    b.HasKey("Id");

                    b.HasIndex("Id_Cuenta");

                    b.ToTable("Cat_Sucursales");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Sugeridos_Producto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("estatus");

                    b.Property<int>("id_producto");

                    b.Property<string>("sku_sugerido");

                    b.HasKey("id");

                    b.HasIndex("id_producto");

                    b.ToTable("Cat_Sugeridos_Producto");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_SuperLinea", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descripcion");

                    b.Property<bool>("estatus");

                    b.HasKey("id");

                    b.ToTable("cat_SuperLineas");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Tarjeta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("estatus");

                    b.Property<string>("nombre");

                    b.HasKey("id");

                    b.ToTable("cat_Tarjetas");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Tecnicos_Sub_Tipo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Sub_desc_tipo");

                    b.Property<int>("id_tipo");

                    b.HasKey("id");

                    b.ToTable("Cat_Tecnicos_Sub_Tipo");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Tecnicos_Tipo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("desc_tipo");

                    b.HasKey("id");

                    b.ToTable("Cat_Tecnicos_Tipo");
                });

            modelBuilder.Entity("WebApplication.Models.cat_tipo_condicion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("tipo_condicion");

                    b.HasKey("id");

                    b.ToTable("cat_tipo_condicion");
                });

            modelBuilder.Entity("WebApplication.Models.cat_tipo_entidades", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("tipo_entidad");

                    b.HasKey("id");

                    b.ToTable("cat_tipo_entidades");
                });

            modelBuilder.Entity("WebApplication.Models.cat_tipo_productos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("tipo");

                    b.HasKey("id");

                    b.ToTable("cat_tipo_productos");
                });

            modelBuilder.Entity("WebApplication.Models.cat_tipo_refaccion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("desc_tipo_refaccion");

                    b.Property<bool>("estatus");

                    b.HasKey("id");

                    b.ToTable("Cat_Tipo_Refaccion");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_tipo_servicio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("desc_tipo_servicio");

                    b.Property<bool>("estatus");

                    b.HasKey("id");

                    b.ToTable("Cat_tipo_servicio");
                });

            modelBuilder.Entity("WebApplication.Models.cat_tipos_comisiones", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("tipo_comision");

                    b.HasKey("id");

                    b.ToTable("cat_tipos_comisiones");
                });

            modelBuilder.Entity("WebApplication.Models.cat_tipos_herencia", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("tipo");

                    b.HasKey("id");

                    b.ToTable("cat_tipos_herencia");
                });

            modelBuilder.Entity("WebApplication.Models.CatEstatus_Producto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("desc_estatus_producto");

                    b.Property<string>("desc_estatus_producto_en");

                    b.Property<bool>("estatus");

                    b.Property<int>("id_tipo_servicio");

                    b.HasKey("id");

                    b.ToTable("CatEstatus_Producto");
                });

            modelBuilder.Entity("WebApplication.Models.CatEstatus_Visita", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("desc_estatus_visita");

                    b.Property<string>("desc_estatus_visita_en");

                    b.Property<bool>("estatus");

                    b.Property<int>("id_tipo_servicio");

                    b.HasKey("id");

                    b.ToTable("CatEstatus_Visita");
                });

            modelBuilder.Entity("WebApplication.Models.Cer_consumibles", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("consumible");

                    b.Property<decimal>("costo_unitario");

                    b.HasKey("id");

                    b.ToTable("Cer_consumibles");
                });

            modelBuilder.Entity("WebApplication.Models.Cer_labor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("anual");

                    b.Property<int>("cantidad_equipos");

                    b.Property<decimal>("costo_base");

                    b.Property<decimal>("costo_unitario");

                    b.HasKey("id");

                    b.ToTable("Cer_labor");
                });

            modelBuilder.Entity("WebApplication.Models.Cer_producto_carrito", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("costo");

                    b.Property<string>("folio");

                    b.Property<long>("id_carrito");

                    b.Property<int>("id_labor");

                    b.Property<int>("id_viaticos");

                    b.HasKey("id");

                    b.ToTable("Cer_producto_carrito");
                });

            modelBuilder.Entity("WebApplication.Models.Cer_producto_cliente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Clientesid");

                    b.Property<DateTime>("actualizado");

                    b.Property<long>("actualizadopor");

                    b.Property<int>("costo");

                    b.Property<DateTime>("creado");

                    b.Property<long>("creadopor");

                    b.Property<bool>("estatus_venta");

                    b.Property<string>("folio");

                    b.Property<long>("id_cliente");

                    b.Property<long>("id_cotizacion");

                    b.Property<int>("id_labor");

                    b.Property<int>("id_viaticos");

                    b.HasKey("id");

                    b.HasIndex("Clientesid");

                    b.HasIndex("id_labor");

                    b.HasIndex("id_viaticos");

                    b.ToTable("Cer_producto_cliente");
                });

            modelBuilder.Entity("WebApplication.Models.Cer_viaticos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("anual");

                    b.Property<decimal>("costo_unitario");

                    b.Property<int>("id_cat_localidad");

                    b.HasKey("id");

                    b.HasIndex("id_cat_localidad");

                    b.ToTable("Cer_viaticos");
                });

            modelBuilder.Entity("WebApplication.Models.Check_List_Preguntas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("id_categoria");

                    b.Property<string>("pregunta");

                    b.Property<string>("pregunta_en");

                    b.HasKey("id");

                    b.ToTable("Check_List_Preguntas");
                });

            modelBuilder.Entity("WebApplication.Models.Check_List_Respuestas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("comentarios");

                    b.Property<string>("comentarios_en");

                    b.Property<int>("id_pregunta");

                    b.Property<int>("id_producto_check_list_respuestas");

                    b.Property<bool>("respuesta");

                    b.HasKey("id");

                    b.HasIndex("id_producto_check_list_respuestas");

                    b.ToTable("Check_List_Respuestas");
                });

            modelBuilder.Entity("WebApplication.Models.Cliente_Productos", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Cat_Estatus_CompraId");

                    b.Property<int?>("Cat_Productosid");

                    b.Property<DateTime>("FechaCompra");

                    b.Property<DateTime>("FinGarantia");

                    b.Property<long>("Id_Cliente");

                    b.Property<long>("Id_EsatusCompra");

                    b.Property<long>("Id_Producto");

                    b.Property<string>("NoOrdenCompra");

                    b.Property<string>("NoPoliza");

                    b.Property<DateTime>("actualizado");

                    b.Property<long>("actualizadopor");

                    b.Property<DateTime>("creado");

                    b.Property<long>("creadopor");

                    b.Property<int>("id_cotizacion");

                    b.Property<int>("id_visita");

                    b.Property<int>("no_producto");

                    b.Property<string>("no_serie");

                    b.HasKey("Id");

                    b.HasIndex("Cat_Estatus_CompraId");

                    b.HasIndex("Cat_Productosid");

                    b.HasIndex("Id_Cliente");

                    b.ToTable("Cliente_Productos");
                });

            modelBuilder.Entity("WebApplication.Models.Clientes", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Cat_Estadoid");

                    b.Property<int?>("Cat_Municipioid");

                    b.Property<int>("Id_sucursal");

                    b.Property<DateTime>("actualizado");

                    b.Property<long>("actualizadopor");

                    b.Property<DateTime>("creado");

                    b.Property<long>("creadopor");

                    b.Property<string>("email");

                    b.Property<bool>("estatus");

                    b.Property<string>("folio");

                    b.Property<string>("materno");

                    b.Property<string>("nombre");

                    b.Property<string>("nombre_comercial");

                    b.Property<string>("nombre_contacto");

                    b.Property<string>("paterno");

                    b.Property<string>("referencias");

                    b.Property<long>("referidopor");

                    b.Property<string>("telefono");

                    b.Property<string>("telefono_movil");

                    b.Property<int>("tipo_cliente");

                    b.Property<string>("tipo_persona");

                    b.Property<DateTime>("vigencia_ref");

                    b.HasKey("id");

                    b.HasIndex("Cat_Estadoid");

                    b.HasIndex("Cat_Municipioid");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("WebApplication.Models.com_afectacion_cc", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("id_comisionv");

                    b.Property<int>("id_condiones_comerciales_sucursal");

                    b.Property<int>("margen");

                    b.HasKey("id");

                    b.HasIndex("id_comisionv");

                    b.HasIndex("id_condiones_comerciales_sucursal");

                    b.ToTable("com_afectacion_ccs");
                });

            modelBuilder.Entity("WebApplication.Models.com_entidades_participantes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("id_comisionv");

                    b.Property<int>("id_entidad");

                    b.Property<int>("id_tipo_entidad");

                    b.HasKey("id");

                    b.HasIndex("id_comisionv");

                    b.HasIndex("id_tipo_entidad");

                    b.ToTable("com_entidades_participantes");
                });

            modelBuilder.Entity("WebApplication.Models.com_producto_promocion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Cat_Productosid");

                    b.Property<int>("id_comisionv");

                    b.Property<int>("id_producto");

                    b.HasKey("id");

                    b.HasIndex("Cat_Productosid");

                    b.HasIndex("id_comisionv");

                    b.ToTable("com_producto_promocions");
                });

            modelBuilder.Entity("WebApplication.Models.com_productos_condicion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cantidad");

                    b.Property<int?>("config_comisionesid");

                    b.Property<int>("id_comisionv");

                    b.Property<int>("id_producto");

                    b.Property<int>("id_tipo_categoria");

                    b.HasKey("id");

                    b.HasIndex("config_comisionesid");

                    b.ToTable("com_productos_condicions");
                });

            modelBuilder.Entity("WebApplication.Models.comision_promo_sublinea_config", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("activo");

                    b.Property<int>("id_cc_sucursal");

                    b.Property<int>("id_sublinea");

                    b.Property<float>("margen");

                    b.HasKey("id");

                    b.ToTable("comisiones_promo_sublinea_config");
                });

            modelBuilder.Entity("WebApplication.Models.comisiones_sucursales", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("fecha_de_pago");

                    b.Property<DateTime>("fecha_generacion");

                    b.Property<int>("id_cat_tipo_comision");

                    b.Property<long>("id_cotizacion");

                    b.Property<long>("id_quienpago");

                    b.Property<bool>("pagada");

                    b.Property<DateTime>("pago_programado");

                    b.HasKey("id");

                    b.HasIndex("id_cat_tipo_comision");

                    b.HasIndex("id_cotizacion");

                    b.ToTable("comisiones_sucursales");
                });

            modelBuilder.Entity("WebApplication.Models.comisiones_vendedores", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("fecha_de_pago");

                    b.Property<DateTime>("fecha_generacion");

                    b.Property<int>("id_cat_tipo_comision");

                    b.Property<long>("id_cotizacion");

                    b.Property<long>("id_quienpago");

                    b.Property<decimal>("monto_com_sin_iva");

                    b.Property<decimal>("monto_comision");

                    b.Property<bool>("pagada");

                    b.Property<DateTime>("pago_programado");

                    b.HasKey("id");

                    b.HasIndex("id_cat_tipo_comision");

                    b.HasIndex("id_cotizacion");

                    b.HasIndex("id_quienpago");

                    b.ToTable("comisiones_vendedores");
                });

            modelBuilder.Entity("WebApplication.Models.CondicionesComerciales_Cuenta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Vigencia_final");

                    b.Property<DateTime>("Vigencia_inicial");

                    b.Property<int>("id_condicion");

                    b.Property<int>("id_cuenta");

                    b.HasKey("id");

                    b.ToTable("CondicionesComerciales_Cuenta");
                });

            modelBuilder.Entity("WebApplication.Models.condiones_comerciales_sucursal", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("id_Cat_SubLinea_Producto");

                    b.Property<int>("id_Cat_Sucursales");

                    b.Property<float>("margen");

                    b.HasKey("id");

                    b.HasIndex("id_Cat_SubLinea_Producto");

                    b.HasIndex("id_Cat_Sucursales");

                    b.ToTable("condiones_comerciales_sucursal");
                });

            modelBuilder.Entity("WebApplication.Models.config_comision", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("fecha_hora_fin");

                    b.Property<string>("fecha_hora_inicio");

                    b.Property<int>("id_cat_tipo_condicion");

                    b.Property<int>("id_tipos_herencia_promo");

                    b.Property<int>("monto_condicion");

                    b.Property<string>("nombre");

                    b.Property<bool>("vigencia_indefinida");

                    b.HasKey("id");

                    b.HasIndex("id_cat_tipo_condicion");

                    b.HasIndex("id_tipos_herencia_promo");

                    b.ToTable("config_comisiones");
                });

            modelBuilder.Entity("WebApplication.Models.cotizacion_monto_descuento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("id_cotizacion");

                    b.Property<int>("id_promocion");

                    b.Property<float>("monto_desc_con_iva");

                    b.Property<float>("monto_desc_sin_iva");

                    b.HasKey("id");

                    b.HasIndex("id_cotizacion");

                    b.HasIndex("id_promocion");

                    b.ToTable("cotizacion_monto_descuento");
                });

            modelBuilder.Entity("WebApplication.Models.Cotizacion_Producto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Id_Cotizacion");

                    b.Property<int>("Id_Producto");

                    b.Property<bool>("agregado_automaticamente");

                    b.Property<int>("cantidad");

                    b.Property<bool>("es_regalo");

                    b.Property<float>("iva_cond_comerciales");

                    b.Property<float>("iva_precio_descuento");

                    b.Property<float>("iva_precio_lista");

                    b.Property<float>("margen_cc");

                    b.Property<float>("precio_condiciones_com");

                    b.Property<float>("precio_descuento");

                    b.Property<float>("precio_lista");

                    b.HasKey("Id");

                    b.HasIndex("Id_Cotizacion");

                    b.HasIndex("Id_Producto");

                    b.ToTable("Cotizacion_Producto");
                });

            modelBuilder.Entity("WebApplication.Models.Cotizacion_Promocion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("id_cotizacion");

                    b.Property<int>("id_promocion");

                    b.HasKey("id");

                    b.HasIndex("id_cotizacion");

                    b.HasIndex("id_promocion");

                    b.ToTable("Cotizacion_Promocion");
                });

            modelBuilder.Entity("WebApplication.Models.Cotizaciones", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Acciones");

                    b.Property<long?>("Clientesid");

                    b.Property<int>("Estatus");

                    b.Property<long>("Id_Canal");

                    b.Property<long>("Id_Cliente");

                    b.Property<long>("Id_Cuenta");

                    b.Property<int>("Id_Estado_Instalacion");

                    b.Property<long>("Id_Vendedor");

                    b.Property<int>("Id_sucursal");

                    b.Property<string>("Numero");

                    b.Property<string>("Observaciones");

                    b.Property<bool>("acepto_terminos_condiciones");

                    b.Property<DateTime>("cambio_ord_comp_generada");

                    b.Property<bool>("cancelada");

                    b.Property<string>("coment_cancel");

                    b.Property<float>("comision_sucrusal");

                    b.Property<float>("comision_vendedor");

                    b.Property<int>("creadopor");

                    b.Property<float>("descuento_acumulado");

                    b.Property<float>("descuento_acumulado_cond_com");

                    b.Property<bool>("entrega_sol");

                    b.Property<DateTime>("fecha_cotiza");

                    b.Property<string>("ibs");

                    b.Property<long>("id_cotizacion_padre");

                    b.Property<int>("id_formapago");

                    b.Property<int>("id_tarjeta");

                    b.Property<bool>("id_user_entrega_sol");

                    b.Property<float>("importe_condiciones_com");

                    b.Property<float>("importe_precio_lista");

                    b.Property<float>("importe_promociones");

                    b.Property<float>("iva_condiciones_com");

                    b.Property<float>("iva_precio_lista");

                    b.Property<float>("iva_promociones");

                    b.Property<string>("motivo_rechazo");

                    b.Property<int>("numero_productos");

                    b.Property<int>("puede_solicitar_env");

                    b.Property<bool>("rechazada");

                    b.Property<long>("referencia");

                    b.Property<bool>("requiere_fact");

                    b.Property<int>("usr_modifico");

                    b.Property<DateTime>("vigenica_ref");

                    b.HasKey("Id");

                    b.HasIndex("Clientesid");

                    b.HasIndex("Id_Canal");

                    b.ToTable("Cotizaciones");
                });

            modelBuilder.Entity("WebApplication.Models.DatosFiscales", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ext_fact");

                    b.Property<string>("Int_fact");

                    b.Property<string>("calle_numero");

                    b.Property<string>("colonia");

                    b.Property<string>("cp");

                    b.Property<string>("email");

                    b.Property<long>("id_cliente");

                    b.Property<int>("id_estado");

                    b.Property<int>("id_municipio");

                    b.Property<int>("id_prefijo_calle");

                    b.Property<string>("nombre_fact");

                    b.Property<string>("razon_social");

                    b.Property<string>("rfc");

                    b.Property<string>("telefono_fact");

                    b.HasKey("id");

                    b.HasIndex("id_cliente");

                    b.ToTable("DatosFiscales");
                });

            modelBuilder.Entity("WebApplication.Models.DatosFiscales_Canales", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ext_fact");

                    b.Property<string>("Int_fact");

                    b.Property<string>("calle_numero");

                    b.Property<string>("colonia");

                    b.Property<string>("cp");

                    b.Property<string>("email");

                    b.Property<long>("id_canal");

                    b.Property<int>("id_estado");

                    b.Property<int>("id_municipio");

                    b.Property<string>("nombre_fact");

                    b.Property<string>("razon_social");

                    b.Property<string>("rfc");

                    b.Property<string>("telefono_fact");

                    b.HasKey("id");

                    b.ToTable("DatosFiscales_Canales");
                });

            modelBuilder.Entity("WebApplication.Models.DatosFiscales_Sucursales", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ext_fact");

                    b.Property<string>("Int_fact");

                    b.Property<string>("calle_numero");

                    b.Property<string>("colonia");

                    b.Property<string>("cp");

                    b.Property<string>("email");

                    b.Property<int>("id_Sucursal");

                    b.Property<int>("id_estado");

                    b.Property<int>("id_municipio");

                    b.Property<string>("nombre_fact");

                    b.Property<string>("razon_social");

                    b.Property<string>("rfc");

                    b.Property<string>("telefono_fact");

                    b.HasKey("id");

                    b.HasIndex("id_Sucursal");

                    b.ToTable("DatosFiscales_Sucursales");
                });

            modelBuilder.Entity("WebApplication.Models.Direccion_Cotizacion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Fecha_Estimada");

                    b.Property<DateTime>("actualizado");

                    b.Property<long>("actualizadopor");

                    b.Property<string>("calle_numero");

                    b.Property<string>("colonia");

                    b.Property<string>("cp");

                    b.Property<DateTime>("creado");

                    b.Property<long>("creadopor");

                    b.Property<bool>("estatus");

                    b.Property<long>("id_cotizacion");

                    b.Property<int>("id_estado");

                    b.Property<int>("id_localidad");

                    b.Property<int>("id_municipio");

                    b.Property<int>("id_prefijo_calle");

                    b.Property<string>("nombrecontacto");

                    b.Property<string>("numExt");

                    b.Property<string>("numInt");

                    b.Property<string>("telefono");

                    b.Property<string>("telefono_movil");

                    b.Property<int?>("tipo_direccion");

                    b.HasKey("id");

                    b.HasIndex("id_cotizacion");

                    b.ToTable("direcciones_cotizacion");
                });

            modelBuilder.Entity("WebApplication.Models.Direcciones_Cliente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Fecha_Estimada");

                    b.Property<DateTime>("actualizado");

                    b.Property<long>("actualizadopor");

                    b.Property<string>("calle_numero");

                    b.Property<string>("colonia");

                    b.Property<string>("cp");

                    b.Property<DateTime>("creado");

                    b.Property<long>("creadopor");

                    b.Property<bool>("estatus");

                    b.Property<long>("id_cliente");

                    b.Property<int>("id_estado");

                    b.Property<int>("id_localidad");

                    b.Property<int>("id_municipio");

                    b.Property<int>("id_prefijo_calle");

                    b.Property<string>("nombrecontacto");

                    b.Property<string>("numExt");

                    b.Property<string>("numInt");

                    b.Property<string>("telefono");

                    b.Property<string>("telefono_movil");

                    b.Property<int?>("tipo_direccion");

                    b.HasKey("id");

                    b.HasIndex("id_cliente");

                    b.ToTable("Direcciones_Cliente");
                });

            modelBuilder.Entity("WebApplication.Models.documentos_cotizacion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Id_Cotizacion");

                    b.Property<string>("Id_foto");

                    b.Property<DateTime>("fecha_subida");

                    b.Property<int>("id_forma_pago");

                    b.Property<int>("id_tipo_tipo_pago");

                    b.Property<long>("id_user");

                    b.Property<int>("tipo_docto");

                    b.HasKey("Id");

                    b.ToTable("documentos_cotizacion");
                });

            modelBuilder.Entity("WebApplication.Models.encuesta_general", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("estatus_activo");

                    b.Property<int>("estatus_encuesta");

                    b.Property<DateTime>("fecha");

                    b.Property<string>("folio");

                    b.Property<long>("id_cliente");

                    b.Property<long>("id_servicio");

                    b.Property<int>("intentos");

                    b.Property<string>("pregunta_1");

                    b.Property<string>("pregunta_10");

                    b.Property<string>("pregunta_11");

                    b.Property<string>("pregunta_12");

                    b.Property<string>("pregunta_13");

                    b.Property<string>("pregunta_14");

                    b.Property<string>("pregunta_15");

                    b.Property<string>("pregunta_2");

                    b.Property<string>("pregunta_3");

                    b.Property<string>("pregunta_4");

                    b.Property<string>("pregunta_5");

                    b.Property<string>("pregunta_6");

                    b.Property<string>("pregunta_7");

                    b.Property<string>("pregunta_8");

                    b.Property<string>("pregunta_9");

                    b.HasKey("id");

                    b.HasIndex("id_servicio");

                    b.ToTable("encuesta_general");
                });

            modelBuilder.Entity("WebApplication.Models.encuesta_queja", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("estatus_activo");

                    b.Property<int>("estatus_encuesta");

                    b.Property<DateTime>("fecha");

                    b.Property<string>("folio");

                    b.Property<long>("id_cliente");

                    b.Property<int>("id_queja");

                    b.Property<int>("intentos");

                    b.Property<string>("pregunta_1");

                    b.Property<string>("pregunta_10");

                    b.Property<string>("pregunta_11");

                    b.Property<string>("pregunta_2");

                    b.Property<string>("pregunta_3");

                    b.Property<string>("pregunta_4");

                    b.Property<string>("pregunta_5");

                    b.Property<string>("pregunta_6");

                    b.Property<string>("pregunta_7");

                    b.Property<string>("pregunta_8");

                    b.Property<string>("pregunta_9");

                    b.HasKey("id");

                    b.ToTable("encuesta_queja");
                });

            modelBuilder.Entity("WebApplication.Models.entidades_excluidas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("id_entidad");

                    b.Property<int>("id_promocion");

                    b.Property<int>("id_tipo_entidad");

                    b.HasKey("id");

                    b.HasIndex("id_promocion");

                    b.HasIndex("id_tipo_entidad");

                    b.ToTable("entidades_excluidas");
                });

            modelBuilder.Entity("WebApplication.Models.entidades_obligatorias", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("id_entidad");

                    b.Property<int>("id_promocion");

                    b.Property<int>("id_tipo_entidad");

                    b.HasKey("id");

                    b.HasIndex("id_promocion");

                    b.HasIndex("id_tipo_entidad");

                    b.ToTable("entidades_obligatorias");
                });

            modelBuilder.Entity("WebApplication.Models.entidades_participantes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("id_entidad");

                    b.Property<int>("id_promocion");

                    b.Property<int>("id_tipo_entidad");

                    b.HasKey("id");

                    b.HasIndex("id_promocion");

                    b.HasIndex("id_tipo_entidad");

                    b.ToTable("entidades_participantes");
                });

            modelBuilder.Entity("WebApplication.Models.formas_pago_tipos_comprobantes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("id_Cat_Formas_Pago");

                    b.Property<int>("id_tipo_comprobantes");

                    b.HasKey("id");

                    b.ToTable("formas_pago_tipos_comprobantes");
                });

            modelBuilder.Entity("WebApplication.Models.His_Servicio_Estatus", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("creado");

                    b.Property<long>("creadopor");

                    b.Property<int>("estatus_final");

                    b.Property<int>("estatus_inicial");

                    b.Property<long>("id_servicio");

                    b.HasKey("id");

                    b.HasIndex("id_servicio");

                    b.ToTable("historial_estatus");
                });

            modelBuilder.Entity("WebApplication.Models.Home_producto_cliente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Clientesid");

                    b.Property<DateTime>("actualizado");

                    b.Property<long>("actualizadopor");

                    b.Property<int>("costo");

                    b.Property<DateTime>("creado");

                    b.Property<long>("creadopor");

                    b.Property<bool>("estatus_activo");

                    b.Property<bool>("estatus_venta");

                    b.Property<string>("folio");

                    b.Property<int>("horas");

                    b.Property<long>("id_cliente");

                    b.Property<int?>("id_cotizacion");

                    b.Property<int>("id_producto");

                    b.Property<int>("no_visitas");

                    b.HasKey("id");

                    b.HasIndex("Clientesid");

                    b.ToTable("home_producto_cliente");
                });

            modelBuilder.Entity("WebApplication.Models.Home_Producto_Estado", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("id_estado");

                    b.Property<int>("id_producto_home");

                    b.HasKey("id");

                    b.HasIndex("id_estado");

                    b.HasIndex("id_producto_home");

                    b.ToTable("home_Producto_Estados");
                });

            modelBuilder.Entity("WebApplication.Models.Informe_parte_recibida", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cantidad");

                    b.Property<int>("id_producto");

                    b.Property<int>("id_visita");

                    b.Property<string>("no_material");

                    b.HasKey("id");

                    b.ToTable("Informe_parte_recibida");
                });

            modelBuilder.Entity("WebApplication.Models.Log_refacciones", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("almacen_entrada");

                    b.Property<string>("almacen_salida");

                    b.Property<int>("cantidad");

                    b.Property<int>("id_refaccion");

                    b.Property<int>("id_usuario");

                    b.HasKey("id");

                    b.ToTable("Log_refacciones");
                });

            modelBuilder.Entity("WebApplication.Models.Mensaje", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("detalle_msj");

                    b.Property<DateTime>("fecha_msj");

                    b.Property<int>("motivo_id");

                    b.Property<int>("orden_id");

                    b.Property<int>("usuario_id");

                    b.HasKey("id");

                    b.HasIndex("motivo_id");

                    b.ToTable("mensajes");
                });

            modelBuilder.Entity("WebApplication.Models.Notificaciones", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("creado");

                    b.Property<long>("creadopor");

                    b.Property<string>("descripcion");

                    b.Property<bool>("estatus_leido");

                    b.Property<string>("evento");

                    b.Property<int>("rol_notificado");

                    b.Property<string>("url");

                    b.HasKey("id");

                    b.ToTable("Notificaciones");
                });

            modelBuilder.Entity("WebApplication.Models.Parametro_Archivo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("col_uno")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("funcion");

                    b.Property<string>("ruta");

                    b.HasKey("id");

                    b.ToTable("parametro_Archivos");
                });

            modelBuilder.Entity("WebApplication.Models.Permisos_Flujo_Cotizacion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("id_Canal");

                    b.Property<int>("id_estatus_cotizacion");

                    b.Property<long>("id_rol");

                    b.Property<int>("id_tabla");

                    b.Property<bool>("inhabilitado");

                    b.Property<string>("permiso");

                    b.Property<bool>("visible");

                    b.HasKey("id");

                    b.ToTable("Permisos_Flujo_Cotizacion");
                });

            modelBuilder.Entity("WebApplication.Models.Piezas_Repuesto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cantidad");

                    b.Property<string>("comentarios");

                    b.Property<long>("id_material");

                    b.Property<int>("id_rel_servicio_refaccion");

                    b.Property<bool>("llegada");

                    b.Property<bool>("solicitada");

                    b.HasKey("id");

                    b.HasIndex("id_rel_servicio_refaccion");

                    b.ToTable("Piezas_Repuesto");
                });

            modelBuilder.Entity("WebApplication.Models.Piezas_Repuesto_Tecnico", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cantidad");

                    b.Property<long>("id_material");

                    b.Property<int>("id_rel_servicio_refaccion");

                    b.Property<string>("tipo_refaccion");

                    b.HasKey("id");

                    b.HasIndex("id_rel_servicio_refaccion");

                    b.ToTable("Piezas_Repuesto_Tecnico");
                });

            modelBuilder.Entity("WebApplication.Models.Prediagnostico", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("id_visita");

                    b.Property<string>("observaciones");

                    b.Property<long?>("visitaid");

                    b.HasKey("id");

                    b.HasIndex("visitaid");

                    b.ToTable("Prediagnostico");
                });

            modelBuilder.Entity("WebApplication.Models.Prediagnostico_Refacciones", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cantidad");

                    b.Property<bool>("estatus");

                    b.Property<bool>("garantia");

                    b.Property<long>("id_material");

                    b.Property<long>("id_prediagnostico");

                    b.Property<string>("numero_ir");

                    b.HasKey("id");

                    b.HasIndex("id_prediagnostico");

                    b.ToTable("Prediagnostico_Refacciones");
                });

            modelBuilder.Entity("WebApplication.Models.producto_certificado_sublinea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_sublinea");

                    b.Property<int>("id_producto");

                    b.HasKey("Id");

                    b.ToTable("producto_certificado_sublinea");
                });

            modelBuilder.Entity("WebApplication.Models.Producto_Check_List_Respuestas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("estatus");

                    b.Property<long>("id_producto");

                    b.Property<long>("id_vista");

                    b.HasKey("id");

                    b.HasIndex("id_vista");

                    b.ToTable("Producto_Check_List_Respuestas");
                });

            modelBuilder.Entity("WebApplication.Models.Producto_Promocion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("id_cotizacion");

                    b.Property<int>("id_producto");

                    b.Property<int>("id_promocion");

                    b.HasKey("id");

                    b.HasIndex("id_cotizacion");

                    b.HasIndex("id_producto");

                    b.HasIndex("id_promocion");

                    b.ToTable("Producto_Promocion");
                });

            modelBuilder.Entity("WebApplication.Models.Productos_Carrito", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_Producto");

                    b.Property<float>("agregado_automaticamente");

                    b.Property<int>("cantidad");

                    b.Property<float>("es_regalo");

                    b.Property<DateTime>("fecha_creacion");

                    b.Property<int>("id_usuario");

                    b.Property<float>("iva_cond_comerciales");

                    b.Property<float>("iva_precio_descuento");

                    b.Property<float>("iva_precio_lista");

                    b.Property<float>("margen_cc");

                    b.Property<float>("precio_condiciones_com");

                    b.Property<float>("precio_descuento");

                    b.Property<float>("precio_lista");

                    b.HasKey("Id");

                    b.HasIndex("Id_Producto");

                    b.ToTable("Productos_Carrito");
                });

            modelBuilder.Entity("WebApplication.Models.productos_condicion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cantidad");

                    b.Property<int>("id_producto");

                    b.Property<int>("id_promocion");

                    b.Property<int>("id_tipo_categoria");

                    b.HasKey("id");

                    b.HasIndex("id_promocion");

                    b.ToTable("productos_condicion");
                });

            modelBuilder.Entity("WebApplication.Models.productos_excluidos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("id_producto");

                    b.Property<int>("id_promocion");

                    b.Property<int>("id_tipo_categoria");

                    b.HasKey("id");

                    b.HasIndex("id_promocion");

                    b.ToTable("productos_excluidos");
                });

            modelBuilder.Entity("WebApplication.Models.productos_relacionados", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("id_producto");

                    b.Property<int>("id_producto_2");

                    b.HasKey("id");

                    b.ToTable("productos_relacionados");
                });

            modelBuilder.Entity("WebApplication.Models.ProductosQuejas", b =>
                {
                    b.Property<int>("ProductoId");

                    b.Property<int>("QuejaId");

                    b.HasKey("ProductoId", "QuejaId");

                    b.HasIndex("QuejaId");

                    b.ToTable("ProductosQuejas");
                });

            modelBuilder.Entity("WebApplication.Models.promocion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("aplica_cc");

                    b.Property<bool>("aplica_comision_config");

                    b.Property<bool>("beneficio_obligatorio");

                    b.Property<string>("fecha_hora_fin");

                    b.Property<string>("fecha_hora_inicio");

                    b.Property<int>("id_cat_tipo_condicion");

                    b.Property<int>("id_tipo_beneficio");

                    b.Property<int>("id_tipos_herencia_promo");

                    b.Property<bool>("incluir_desc_adic");

                    b.Property<decimal>("monto_condicion");

                    b.Property<decimal>("monto_inferior_condicion");

                    b.Property<string>("nombre");

                    b.Property<bool>("vigencia_indefinida");

                    b.HasKey("id");

                    b.HasIndex("id_cat_tipo_condicion");

                    b.HasIndex("id_tipos_herencia_promo");

                    b.ToTable("promocion");
                });

            modelBuilder.Entity("WebApplication.Models.promociones_compatibles", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("id_promocion");

                    b.Property<int>("id_promocion_2");

                    b.HasKey("id");

                    b.HasIndex("id_promocion");

                    b.ToTable("promociones_compatibles");
                });

            modelBuilder.Entity("WebApplication.Models.Propuestas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DetalleCierre");

                    b.Property<bool>("Email");

                    b.Property<DateTime>("Fecha");

                    b.Property<DateTime?>("FechaCierre");

                    b.Property<int>("QuejaId");

                    b.Property<string>("Solucion")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("QuejaId");

                    b.ToTable("Propuestas");
                });

            modelBuilder.Entity("WebApplication.Models.Quejas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Atendio");

                    b.Property<int>("CanalId");

                    b.Property<long>("ClienteId");

                    b.Property<string>("DetalleReclamo");

                    b.Property<bool>("Estatus");

                    b.Property<DateTime>("Fecha");

                    b.Property<string>("Folio")
                        .IsRequired();

                    b.Property<string>("Telefono");

                    b.Property<int>("TipoQuejaId");

                    b.HasKey("Id");

                    b.HasIndex("CanalId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("TipoQuejaId");

                    b.ToTable("Quejas");
                });

            modelBuilder.Entity("WebApplication.Models.quejas_servicios", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("id_queja");

                    b.Property<long>("id_servicio");

                    b.HasKey("id");

                    b.HasIndex("id_servicio");

                    b.ToTable("quejas_servicios");
                });

            modelBuilder.Entity("WebApplication.Models.Registro", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<bool>("IsComplete");

                    b.Property<string>("Materno");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Paterno");

                    b.HasKey("Id");

                    b.ToTable("RegistroItems");
                });

            modelBuilder.Entity("WebApplication.Models.Rel_Categoria_Producto_Tipo_Producto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("estatus");

                    b.Property<string>("horas_tecnicos");

                    b.Property<int>("id_categoria");

                    b.Property<int>("id_tipo_servicio");

                    b.Property<int>("no_tecnicos");

                    b.Property<int?>("precio_hora_tecnico");

                    b.Property<int?>("precio_visita");

                    b.HasKey("id");

                    b.HasIndex("id_categoria");

                    b.HasIndex("id_tipo_servicio");

                    b.ToTable("Rel_Categoria_Producto_Tipo_Producto");
                });

            modelBuilder.Entity("WebApplication.Models.rel_certificado_carrito", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("estatus_activo");

                    b.Property<int>("id_carrito");

                    b.Property<int>("id_producto");

                    b.Property<int>("id_sub_linea");

                    b.Property<int>("no_visitas");

                    b.HasKey("id");

                    b.ToTable("rel_certificado_carrito");
                });

            modelBuilder.Entity("WebApplication.Models.rel_certificado_producto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("creado");

                    b.Property<bool>("estatus_activo");

                    b.Property<DateTime>("fecha_visita_1");

                    b.Property<DateTime>("fecha_visita_2");

                    b.Property<int>("id_certificado");

                    b.Property<int>("id_producto");

                    b.Property<int>("id_sub_linea");

                    b.Property<int>("no_visitas");

                    b.HasKey("id");

                    b.HasIndex("id_certificado");

                    b.ToTable("rel_certificado_producto");
                });

            modelBuilder.Entity("WebApplication.Models.rel_certificado_producto_consumibles", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("id_consumible");

                    b.Property<int>("id_rel_certificado_producto");

                    b.HasKey("id");

                    b.HasIndex("id_consumible");

                    b.HasIndex("id_rel_certificado_producto");

                    b.ToTable("rel_certificado_producto_consumibles");
                });

            modelBuilder.Entity("WebApplication.Models.rel_consumible_sublinea", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("id_consumible");

                    b.Property<int>("id_sublinea");

                    b.HasKey("id");

                    b.HasIndex("id_consumible");

                    b.ToTable("rel_consumible_sublinea");
                });

            modelBuilder.Entity("WebApplication.Models.Rel_Imagen_Producto_Visita", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("actividad");

                    b.Property<bool>("checklist");

                    b.Property<DateTime>("creado");

                    b.Property<long>("creadopor");

                    b.Property<bool>("estatus");

                    b.Property<int>("id_producto");

                    b.Property<int>("id_visita");

                    b.Property<string>("path");

                    b.HasKey("id");

                    b.ToTable("Rel_Imagen_Producto_Visita");
                });

            modelBuilder.Entity("WebApplication.Models.Rel_servicio_visita_producto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descripcion_cierre");

                    b.Property<int>("estatus");

                    b.Property<bool>("garantia");

                    b.Property<int>("id_categoria");

                    b.Property<long>("id_producto");

                    b.Property<long>("id_vista");

                    b.Property<string>("no_serie");

                    b.Property<bool>("primera_visita");

                    b.Property<int>("reparacion");

                    b.HasKey("id");

                    b.HasIndex("id_vista");

                    b.ToTable("Rel_servicio_producto");
                });

            modelBuilder.Entity("WebApplication.Models.Rel_servicio_visita_Refaccion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("actividades");

                    b.Property<string>("comentarios");

                    b.Property<int>("estatus");

                    b.Property<string>("fallas");

                    b.Property<long>("id_producto");

                    b.Property<long>("id_vista");

                    b.HasKey("id");

                    b.HasIndex("id_vista");

                    b.ToTable("Rel_servicio_Refaccion");
                });

            modelBuilder.Entity("WebApplication.Models.rel_tecnico_visita", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("id_tecnico");

                    b.Property<long>("id_vista");

                    b.Property<bool>("tecnico_responsable");

                    b.HasKey("id");

                    b.HasIndex("id_tecnico");

                    b.HasIndex("id_vista");

                    b.ToTable("rel_tecnico_visita");
                });

            modelBuilder.Entity("WebApplication.Models.Servicio", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Cat_Categoria_Servicioid");

                    b.Property<int?>("Cat_estatus_servicioid");

                    b.Property<string>("IBS");

                    b.Property<bool?>("activar_credito");

                    b.Property<DateTime>("actualizado");

                    b.Property<long>("actualizadopor");

                    b.Property<string>("contacto");

                    b.Property<DateTime>("creado");

                    b.Property<long>("creadopor");

                    b.Property<string>("descripcion_actividades");

                    b.Property<DateTime>("fecha_servicio");

                    b.Property<int>("id_categoria_servicio");

                    b.Property<long>("id_cliente");

                    b.Property<long>("id_distribuidor_autorizado");

                    b.Property<int?>("id_estatus_servicio");

                    b.Property<int?>("id_motivo_cierre");

                    b.Property<int>("id_solicitado_por");

                    b.Property<int>("id_solicitud_via");

                    b.Property<int>("id_sub_tipo_servicio");

                    b.Property<int>("id_tipo_servicio");

                    b.Property<string>("no_servicio");

                    b.Property<int>("servicio_sin_pago");

                    b.Property<int?>("sub_tipo_servicioid");

                    b.HasKey("id");

                    b.HasIndex("Cat_Categoria_Servicioid");

                    b.HasIndex("Cat_estatus_servicioid");

                    b.HasIndex("id_cliente");

                    b.HasIndex("id_solicitado_por");

                    b.HasIndex("id_solicitud_via");

                    b.HasIndex("id_tipo_servicio");

                    b.HasIndex("sub_tipo_servicioid");

                    b.ToTable("Servicio");
                });

            modelBuilder.Entity("WebApplication.Models.Servicio_Troubleshooting", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("estatus");

                    b.Property<int>("id_estatus_troubleshooting");

                    b.Property<long>("id_servicio");

                    b.Property<string>("observciones");

                    b.HasKey("id");

                    b.HasIndex("id_estatus_troubleshooting");

                    b.HasIndex("id_servicio");

                    b.ToTable("Servicio_Troubleshooting");
                });

            modelBuilder.Entity("WebApplication.Models.Sub_cat_tipo_servicio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("estatus");

                    b.Property<int>("id_tipo_servicio");

                    b.Property<string>("sub_desc_tipo_servicio");

                    b.HasKey("id");

                    b.HasIndex("id_tipo_servicio");

                    b.ToTable("Sub_cat_tipo_servicio");
                });

            modelBuilder.Entity("WebApplication.Models.sublinea_certificado_partners", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_cotizacion_producto");

                    b.Property<int>("Id_producto_carrito");

                    b.Property<int>("Id_sublinea");

                    b.HasKey("Id");

                    b.ToTable("sublinea_certificado_partners");
                });

            modelBuilder.Entity("WebApplication.Models.Tecnicos", b =>
                {
                    b.Property<long>("id");

                    b.Property<DateTime>("actualizado");

                    b.Property<long>("actualizadopor");

                    b.Property<string>("color");

                    b.Property<DateTime>("creado");

                    b.Property<long>("creadopor");

                    b.Property<int>("id_cat_tecnicos_sub_Tipo");

                    b.Property<int>("id_tipo_tecnico");

                    b.Property<string>("noalmacen");

                    b.HasKey("id");

                    b.HasIndex("id_tipo_tecnico");

                    b.ToTable("Tecnicos");
                });

            modelBuilder.Entity("WebApplication.Models.Tecnicos_Actividad", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("id_actividad");

                    b.Property<long>("id_user");

                    b.HasKey("id");

                    b.HasIndex("id_user");

                    b.ToTable("Tecnicos_Actividad");
                });

            modelBuilder.Entity("WebApplication.Models.Tecnicos_Cobertura", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("id_cobertura");

                    b.Property<long>("id_user");

                    b.HasKey("id");

                    b.HasIndex("id_cobertura");

                    b.HasIndex("id_user");

                    b.ToTable("Tecnicos_Cobertura");
                });

            modelBuilder.Entity("WebApplication.Models.Tecnicos_Producto", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("id_categoria_producto");

                    b.Property<long>("id_user");

                    b.HasKey("id");

                    b.HasIndex("id_categoria_producto");

                    b.HasIndex("id_user");

                    b.ToTable("Tecnicos_Producto");
                });

            modelBuilder.Entity("WebApplication.Models.TipoQueja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("TipoQueja");
                });

            modelBuilder.Entity("WebApplication.Models.tipos_comprobantes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("es_liquidacion");

                    b.Property<string>("tipo_pago");

                    b.HasKey("id");

                    b.ToTable("tipos_comprobantes");
                });

            modelBuilder.Entity("WebApplication.Models.Token_Activo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Fecha");

                    b.Property<long>("Id_user");

                    b.Property<string>("Token");

                    b.HasKey("Id");

                    b.ToTable("TokenItems");
                });

            modelBuilder.Entity("WebApplication.Models.Users", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("actualizado");

                    b.Property<long>("actualizadopor");

                    b.Property<string>("avatar");

                    b.Property<DateTime>("creado");

                    b.Property<long>("creadopor");

                    b.Property<string>("email");

                    b.Property<bool>("estatus");

                    b.Property<DateTime>("fecha_nacimiento");

                    b.Property<int>("id_Sucursales");

                    b.Property<long>("id_app");

                    b.Property<int>("id_canal");

                    b.Property<int>("id_cuenta");

                    b.Property<long>("id_rol");

                    b.Property<string>("materno");

                    b.Property<string>("name");

                    b.Property<string>("nivel");

                    b.Property<string>("password");

                    b.Property<string>("paterno");

                    b.Property<string>("telefono");

                    b.Property<string>("telefono_movil");

                    b.Property<string>("username");

                    b.HasKey("id");

                    b.HasIndex("id_app");

                    b.HasIndex("id_rol");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebApplication.Models.Vendedores", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CP");

                    b.Property<DateTime>("actualizado");

                    b.Property<long>("actualizadopor");

                    b.Property<string>("calle_numero");

                    b.Property<string>("colonia");

                    b.Property<DateTime>("creado");

                    b.Property<long>("creadopor");

                    b.Property<string>("email");

                    b.Property<bool>("estatus");

                    b.Property<int>("id_estado");

                    b.Property<int>("id_municipio");

                    b.Property<string>("materno");

                    b.Property<string>("nombre");

                    b.Property<string>("nombre_comercial");

                    b.Property<string>("nombre_contacto");

                    b.Property<string>("paterno");

                    b.Property<string>("referencias");

                    b.Property<string>("telefono");

                    b.Property<string>("telefono_movil");

                    b.HasKey("Id");

                    b.HasIndex("id_estado");

                    b.HasIndex("id_municipio");

                    b.ToTable("Vendedores");
                });

            modelBuilder.Entity("WebApplication.Models.Visita", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Tecnicosid");

                    b.Property<string>("actividades_realizar");

                    b.Property<bool?>("asignacion_refacciones");

                    b.Property<decimal>("cantidad");

                    b.Property<string>("comprobante");

                    b.Property<string>("concepto");

                    b.Property<bool?>("entrega_refacciones");

                    b.Property<int?>("estatus");

                    b.Property<bool>("factura");

                    b.Property<DateTime?>("fecha_agendado");

                    b.Property<string>("fecha_deposito");

                    b.Property<DateTime>("fecha_entrega_refaccion");

                    b.Property<DateTime?>("fecha_fin_visita");

                    b.Property<DateTime?>("fecha_inicio_visita");

                    b.Property<string>("fecha_limite_pago");

                    b.Property<DateTime>("fecha_visita");

                    b.Property<bool>("garantia");

                    b.Property<string>("hora");

                    b.Property<string>("hora_fin");

                    b.Property<int>("id_direccion");

                    b.Property<long>("id_servicio");

                    b.Property<string>("imagen_firma");

                    b.Property<string>("imagen_pago_referenciado");

                    b.Property<string>("latitud_fin");

                    b.Property<string>("latitud_inicio");

                    b.Property<string>("longitud_fin");

                    b.Property<string>("longitud_inicio");

                    b.Property<string>("no_operacion");

                    b.Property<bool>("pagado");

                    b.Property<bool>("pago_pendiente");

                    b.Property<string>("persona_recibe");

                    b.Property<bool?>("pre_diagnostico");

                    b.Property<bool?>("si_acepto_tecnico_refaccion");

                    b.Property<bool>("terminos_condiciones");

                    b.Property<string>("url_ppdf_reporte");

                    b.HasKey("id");

                    b.HasIndex("Tecnicosid");

                    b.HasIndex("id_servicio");

                    b.ToTable("Visita");
                });

            modelBuilder.Entity("WebApplication.Models.afectacion_cc", b =>
                {
                    b.HasOne("WebApplication.Models.condiones_comerciales_sucursal", "condiones_comerciales_sucursal")
                        .WithMany("afectacion_cc")
                        .HasForeignKey("id_condiones_comerciales_sucursal")
                        .HasConstraintName("ForeignKey_afectacioncc_condiones_comerciales_sucursal2")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.promocion", "promocion")
                        .WithMany("afectacion_cc")
                        .HasForeignKey("id_promocion")
                        .HasConstraintName("ForeignKey_9afectacion_cc_promocion2")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.beneficio_desc", b =>
                {
                    b.HasOne("WebApplication.Models.promocion", "promocion")
                        .WithMany("beneficio_desc")
                        .HasForeignKey("id_promocion")
                        .HasConstraintName("ForeignKey_7beneficiodesc_promocion2")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.beneficio_msi", b =>
                {
                    b.HasOne("WebApplication.Models.cat_msi", "cat_msi")
                        .WithMany("beneficio_msi")
                        .HasForeignKey("id_cat_msi")
                        .HasConstraintName("ForeignKey_beneficiomsi_catmsi2")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.promocion", "promocion")
                        .WithMany("beneficio_msi")
                        .HasForeignKey("id_promocion")
                        .HasConstraintName("ForeignKey_beneficiomsi_promo52")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.beneficio_productos", b =>
                {
                    b.HasOne("WebApplication.Models.promocion", "promocion")
                        .WithMany("beneficio_productos")
                        .HasForeignKey("id_promocion")
                        .HasConstraintName("ForeignKey_8beneficioproductos_promocion2")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.beneficios_promocion", b =>
                {
                    b.HasOne("WebApplication.Models.cat_beneficios", "cat_beneficios")
                        .WithMany("beneficios_promocion")
                        .HasForeignKey("id_cat_beneficios")
                        .HasConstraintName("ForeignKey_beneficiospromocion_cattipoentidades2")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.promocion", "promocion")
                        .WithMany("beneficios_promocion")
                        .HasForeignKey("id_promocion")
                        .HasConstraintName("ForeignKey_6beneficiospromocion_promocion2")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Accesorios_Relacionados", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_Accesorios", "accesorios")
                        .WithMany("Cat_Accesorios_Relacionados")
                        .HasForeignKey("id_Accesorio")
                        .HasConstraintName("ForeignKey_Accesorios_relacionados")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Cat_CondicionesPago", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_Formas_Pago", "Cat_Formas_Pago")
                        .WithMany("cat_condicionespago")
                        .HasForeignKey("id_Cat_Formas_Pago")
                        .HasConstraintName("ForeignKey_Cat_Formas_Pago_Cat_CondicionesPago")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.Cat_Cuentas", "Cat_Cuentas")
                        .WithMany("cat_Formas_Pago")
                        .HasForeignKey("id_cuenta")
                        .HasConstraintName("ForeignKey_cuentas_Cat_CondicionesPago")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Cuentas", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_canales", "Canal")
                        .WithMany("Id_Canal_Cuenta")
                        .HasForeignKey("Id_Canal")
                        .HasConstraintName("ForeignKey_Canal_cuenta")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Direccion", b =>
                {
                    b.HasOne("WebApplication.Models.Clientes", "cliente")
                        .WithMany("direccion")
                        .HasForeignKey("id_cliente")
                        .HasConstraintName("ForeignKey_Direccion_Cliente")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Direccion_sucursales", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_Sucursales", "cat_sucursales")
                        .WithMany("cat_direccion_sucursales")
                        .HasForeignKey("id_sucursales")
                        .HasConstraintName("ForeignKey_cat_direcciones_sucu_cat_suc")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Imagenes_Accesosrios", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_Accesorios", "accesorios")
                        .WithMany("cat_imagenes_accesorio")
                        .HasForeignKey("id_Accesorio")
                        .HasConstraintName("ForeignKey_Imagen_Accesorios")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Imagenes_Producto", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_Productos", "productos")
                        .WithMany("cat_imagenes_producto")
                        .HasForeignKey("id_producto")
                        .HasConstraintName("ForeignKey_Imagen_Producto")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Linea_Producto", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_SuperLinea", "cat_SuperLinea")
                        .WithMany("cat_Linea_Productos")
                        .HasForeignKey("id_superlinea")
                        .HasConstraintName("ForeignKey_Cat_linea_Cat_superlinea")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Localidad", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_Municipio", "municipio")
                        .WithMany()
                        .HasForeignKey("municipioid");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Materiales", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_Lista_Precios", "grupo_precio")
                        .WithMany("materiales")
                        .HasForeignKey("id_grupo_precio")
                        .HasConstraintName("ForeignKey_Material_Grupo_Precio")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Municipio", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_Estado", "estado")
                        .WithMany()
                        .HasForeignKey("estadoid");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Productos", b =>
                {
                    b.HasOne("WebApplication.Models.Caracteristica_Base", "caracteristica_Base")
                        .WithMany("cat_Productos")
                        .HasForeignKey("id_caracteristica_base")
                        .HasConstraintName("ForeignKey_cat_productos_caracteristica_base")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.Cat_Linea_Producto", "linea")
                        .WithMany("productos")
                        .HasForeignKey("id_linea")
                        .HasConstraintName("ForeignKey_Linea_Producto");

                    b.HasOne("WebApplication.Models.Cat_SubLinea_Producto", "sublinea")
                        .WithMany("productos")
                        .HasForeignKey("id_sublinea")
                        .HasConstraintName("ForeignKey_Sublinea_Producto");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Productos_Preguntas_Troubleshooting", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_Productos")
                        .WithMany("cat_productos_preguntas_troubleshooting")
                        .HasForeignKey("Cat_Productosid");
                });

            modelBuilder.Entity("WebApplication.Models.Cat_SubLinea_Producto", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_Linea_Producto", "cat_linea_producto")
                        .WithMany("cat_sublinea_producto")
                        .HasForeignKey("id_linea_producto")
                        .HasConstraintName("ForeignKey_Cat_sublinea_cat_linea")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Sucursales", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_Cuentas", "Cuenta")
                        .WithMany("Id_Cuenta_Sucursal")
                        .HasForeignKey("Id_Cuenta")
                        .HasConstraintName("ForeignKey_cuenta_Sucursal")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Cat_Sugeridos_Producto", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_Productos", "productos")
                        .WithMany("cat_sugeridos_producto")
                        .HasForeignKey("id_producto")
                        .HasConstraintName("ForeignKey_Sugeridos_Producto")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Cer_producto_cliente", b =>
                {
                    b.HasOne("WebApplication.Models.Clientes")
                        .WithMany("cer_producto_cliente")
                        .HasForeignKey("Clientesid");

                    b.HasOne("WebApplication.Models.Cer_labor", "labor")
                        .WithMany("cer_producto_cliente")
                        .HasForeignKey("id_labor")
                        .HasConstraintName("ForeignKey_Labor_Mantenimiento")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.Cer_viaticos", "viaticos")
                        .WithMany("cer_producto_cliente")
                        .HasForeignKey("id_viaticos")
                        .HasConstraintName("ForeignKey_Viaticos_Mantenimiento")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Cer_viaticos", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_Localidad", "localidad")
                        .WithMany("viaticos")
                        .HasForeignKey("id_cat_localidad")
                        .HasConstraintName("ForeignKey_cat_localidad_viaticos")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Check_List_Respuestas", b =>
                {
                    b.HasOne("WebApplication.Models.Producto_Check_List_Respuestas", "producto_check_list_respuestas")
                        .WithMany("check_list_respuestas")
                        .HasForeignKey("id_producto_check_list_respuestas")
                        .HasConstraintName("ForeignKey_Check_List_Respuestas")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Cliente_Productos", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_Estatus_Compra")
                        .WithMany("Id_Cliente_Productos")
                        .HasForeignKey("Cat_Estatus_CompraId");

                    b.HasOne("WebApplication.Models.Cat_Productos")
                        .WithMany("Id_Cliente_Productos")
                        .HasForeignKey("Cat_Productosid");

                    b.HasOne("WebApplication.Models.Clientes", "Cliente")
                        .WithMany("Id_Cliente_Productos")
                        .HasForeignKey("Id_Cliente")
                        .HasConstraintName("ForeignKey_Cliente_Producto")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Clientes", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_Estado")
                        .WithMany("clientes")
                        .HasForeignKey("Cat_Estadoid");

                    b.HasOne("WebApplication.Models.Cat_Municipio")
                        .WithMany("clientes")
                        .HasForeignKey("Cat_Municipioid");
                });

            modelBuilder.Entity("WebApplication.Models.com_afectacion_cc", b =>
                {
                    b.HasOne("WebApplication.Models.config_comision", "config_comisiones")
                        .WithMany("afectacion_cc")
                        .HasForeignKey("id_comisionv")
                        .HasConstraintName("ForeignKey_config_comision_afectacion")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.condiones_comerciales_sucursal", "condiones_comerciales_sucursal")
                        .WithMany("com_afectacion_cc")
                        .HasForeignKey("id_condiones_comerciales_sucursal")
                        .HasConstraintName("ForeignKey_comafectacioncc_condiones_comerciales_sucursal2")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.com_entidades_participantes", b =>
                {
                    b.HasOne("WebApplication.Models.config_comision", "config_comisiones")
                        .WithMany("entidades_participantes")
                        .HasForeignKey("id_comisionv")
                        .HasConstraintName("ForeignKey_config_comision_participantes")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.cat_tipo_entidades", "cat_tipo_entidades")
                        .WithMany("com_entidades_participantes")
                        .HasForeignKey("id_tipo_entidad")
                        .HasConstraintName("ForeignKey_comentidadesparticipantes_comcattipoentidades2")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.com_producto_promocion", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_Productos", "Cat_Productos")
                        .WithMany()
                        .HasForeignKey("Cat_Productosid");

                    b.HasOne("WebApplication.Models.config_comision", "config_comisiones")
                        .WithMany("producto_promocion")
                        .HasForeignKey("id_comisionv")
                        .HasConstraintName("ForeignKey_config_comision_productos_misiones_prom")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.com_productos_condicion", b =>
                {
                    b.HasOne("WebApplication.Models.config_comision", "config_comisiones")
                        .WithMany("productos_condicion")
                        .HasForeignKey("config_comisionesid");
                });

            modelBuilder.Entity("WebApplication.Models.comisiones_sucursales", b =>
                {
                    b.HasOne("WebApplication.Models.cat_tipos_comisiones", "cat_tipos_comisiones")
                        .WithMany("comisiones_sucursales")
                        .HasForeignKey("id_cat_tipo_comision")
                        .HasConstraintName("ForeignKey_comisiones_sucursales_tipo_comisiones")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.Cotizaciones", "cotizaciones")
                        .WithMany("comisiones_sucursales")
                        .HasForeignKey("id_cotizacion")
                        .HasConstraintName("ForeignKey_comisiones_sucursales_cotizaciones")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.comisiones_vendedores", b =>
                {
                    b.HasOne("WebApplication.Models.cat_tipos_comisiones", "cat_tipos_comisiones")
                        .WithMany("comisiones_vendedores")
                        .HasForeignKey("id_cat_tipo_comision")
                        .HasConstraintName("ForeignKey_comisiones_vendedores_tipo_comisiones")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.Cotizaciones", "cotizaciones")
                        .WithMany("comisiones_vendedores")
                        .HasForeignKey("id_cotizacion")
                        .HasConstraintName("ForeignKey_comisiones_vendedores_cotizaciones")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.Users", "Users")
                        .WithMany("comisiones_vendedores")
                        .HasForeignKey("id_quienpago")
                        .HasConstraintName("ForeignKey_Users_comisiones_vendedoress")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.condiones_comerciales_sucursal", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_SubLinea_Producto", "Cat_SubLinea_Producto")
                        .WithMany("condiones_comerciales_sucursal")
                        .HasForeignKey("id_Cat_SubLinea_Producto")
                        .HasConstraintName("ForeignKey_condiones_comerciales_sucursal_sublinea")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.Cat_Sucursales", "Cat_Sucursales")
                        .WithMany("condiones_comerciales_sucursal")
                        .HasForeignKey("id_Cat_Sucursales")
                        .HasConstraintName("ForeignKey_condiones_comerciales_sucursal_sucursales")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.config_comision", b =>
                {
                    b.HasOne("WebApplication.Models.cat_tipo_condicion", "cat_tipo_condicion")
                        .WithMany("config_comisiones")
                        .HasForeignKey("id_cat_tipo_condicion")
                        .HasConstraintName("ForeignKey_config_comision_condicion")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.cat_tipos_herencia", "cat_tipos_herencia")
                        .WithMany("config_comisiones")
                        .HasForeignKey("id_tipos_herencia_promo")
                        .HasConstraintName("ForeignKey_config_comision_herencia")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.cotizacion_monto_descuento", b =>
                {
                    b.HasOne("WebApplication.Models.Cotizaciones", "Cotizaciones")
                        .WithMany("cotizacion_monto_descuento")
                        .HasForeignKey("id_cotizacion")
                        .HasConstraintName("ForeignKey_cotizacion_monto_descuento_cotizacion")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.promocion", "promocion")
                        .WithMany("cotizacion_monto_descuento")
                        .HasForeignKey("id_promocion")
                        .HasConstraintName("ForeignKey_cotizacion_monto_descuento_promocion")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Cotizacion_Producto", b =>
                {
                    b.HasOne("WebApplication.Models.Cotizaciones", "Cotizacion")
                        .WithMany("Id_Cotizacion_Producto")
                        .HasForeignKey("Id_Cotizacion")
                        .HasConstraintName("ForeignKey_Cotizacion_Producto_cotiza")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.Cat_Productos", "Producto")
                        .WithMany("Id_Cotizacion_Producto")
                        .HasForeignKey("Id_Producto")
                        .HasConstraintName("ForeignKey_Cotizacion_Producto_prod")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Cotizacion_Promocion", b =>
                {
                    b.HasOne("WebApplication.Models.Cotizaciones", "Cotizaciones")
                        .WithMany("cotizacion_promocion")
                        .HasForeignKey("id_cotizacion")
                        .HasConstraintName("ForeignKey_producto_promocion_cotizacion")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.promocion", "promocion")
                        .WithMany("cotizacion_promocion")
                        .HasForeignKey("id_promocion")
                        .HasConstraintName("ForeignKey_producto_promocion_promocion")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Cotizaciones", b =>
                {
                    b.HasOne("WebApplication.Models.Clientes")
                        .WithMany("Id_Cliente_Cotizacion")
                        .HasForeignKey("Clientesid");

                    b.HasOne("WebApplication.Models.Cat_canales", "Canal")
                        .WithMany("Id_Canal_Cotizacion")
                        .HasForeignKey("Id_Canal")
                        .HasConstraintName("ForeignKey_Cotizacion_Canal")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.DatosFiscales", b =>
                {
                    b.HasOne("WebApplication.Models.Clientes", "cliente")
                        .WithMany("datos_fiscales")
                        .HasForeignKey("id_cliente")
                        .HasConstraintName("ForeignKey_DatosFiscales_Cliente")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.DatosFiscales_Sucursales", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_Sucursales", "Cat_Sucursales")
                        .WithMany("DatosFiscales_Sucursales")
                        .HasForeignKey("id_Sucursal")
                        .HasConstraintName("ForeignKey_DatosFiscales_Sucursales_datos_fiscales")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Direccion_Cotizacion", b =>
                {
                    b.HasOne("WebApplication.Models.Cotizaciones", "cotizacion")
                        .WithMany("direcciones_cotizacion")
                        .HasForeignKey("id_cotizacion")
                        .HasConstraintName("ForeignKey_Direcciones_Cotizaciones")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Direcciones_Cliente", b =>
                {
                    b.HasOne("WebApplication.Models.Clientes", "cliente")
                        .WithMany("direcciones_Clientes")
                        .HasForeignKey("id_cliente")
                        .HasConstraintName("ForeignKey_Direcciones_Clientes")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.encuesta_general", b =>
                {
                    b.HasOne("WebApplication.Models.Servicio", "Servicio")
                        .WithMany("e_general")
                        .HasForeignKey("id_servicio")
                        .HasConstraintName("ForeignKey_e_general_servicio")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.entidades_excluidas", b =>
                {
                    b.HasOne("WebApplication.Models.promocion", "promocion")
                        .WithMany("entidades_excluidas")
                        .HasForeignKey("id_promocion")
                        .HasConstraintName("ForeignKey_4entidadesexcluidas_promocion2")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.cat_tipo_entidades", "cat_tipo_entidades")
                        .WithMany("entidades_excluidas")
                        .HasForeignKey("id_tipo_entidad")
                        .HasConstraintName("ForeignKey_entidades_excluidas_cattipoentidades2")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.entidades_obligatorias", b =>
                {
                    b.HasOne("WebApplication.Models.promocion", "promocion")
                        .WithMany("entidades_obligatorias")
                        .HasForeignKey("id_promocion")
                        .HasConstraintName("ForeignKey_4entidadesobli_promocion2")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.cat_tipo_entidades", "cat_tipo_entidades")
                        .WithMany("entidades_obligatorias")
                        .HasForeignKey("id_tipo_entidad")
                        .HasConstraintName("ForeignKey_entidades_obligatorias_cattipoentidades2")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.entidades_participantes", b =>
                {
                    b.HasOne("WebApplication.Models.promocion", "promocion")
                        .WithMany("entidades_participantes")
                        .HasForeignKey("id_promocion")
                        .HasConstraintName("ForeignKey_3entidadesparticipantes_promocion2")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.cat_tipo_entidades", "cat_tipo_entidades")
                        .WithMany("entidades_participantes")
                        .HasForeignKey("id_tipo_entidad")
                        .HasConstraintName("ForeignKey_entidadesparticipantes_cattipoentidades2")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.His_Servicio_Estatus", b =>
                {
                    b.HasOne("WebApplication.Models.Servicio", "servicio")
                        .WithMany("historial")
                        .HasForeignKey("id_servicio")
                        .HasConstraintName("ForeignKey_Historial_Servicio")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Home_producto_cliente", b =>
                {
                    b.HasOne("WebApplication.Models.Clientes")
                        .WithMany("home_producto_cliente")
                        .HasForeignKey("Clientesid");
                });

            modelBuilder.Entity("WebApplication.Models.Home_Producto_Estado", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_Estado", "Estado")
                        .WithMany("Home_Productos")
                        .HasForeignKey("id_estado")
                        .HasConstraintName("ForeignKey_Estados_Home_Program")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.Cat_Productos", "Producto")
                        .WithMany("Productos_Estados")
                        .HasForeignKey("id_producto_home")
                        .HasConstraintName("ForeignKey_Productos_Home_Estados")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Mensaje", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_Motivo", "cat_Motivo")
                        .WithMany("mensajes")
                        .HasForeignKey("motivo_id")
                        .HasConstraintName("ForeignKey_Motivo_Mensajes")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Piezas_Repuesto", b =>
                {
                    b.HasOne("WebApplication.Models.Rel_servicio_visita_Refaccion", "refacciones")
                        .WithMany("piezas_repuesto")
                        .HasForeignKey("id_rel_servicio_refaccion")
                        .HasConstraintName("ForeignKey_Piezas_Repuesto_Rel_Servicio_Producto")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Piezas_Repuesto_Tecnico", b =>
                {
                    b.HasOne("WebApplication.Models.Rel_servicio_visita_Refaccion", "refacciones")
                        .WithMany("piezas_repuesto_tecnico")
                        .HasForeignKey("id_rel_servicio_refaccion")
                        .HasConstraintName("ForeignKey_Piezas_Repuesto_Tecnico_Rel_Servicio_Producto")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Prediagnostico", b =>
                {
                    b.HasOne("WebApplication.Models.Visita", "visita")
                        .WithMany()
                        .HasForeignKey("visitaid");
                });

            modelBuilder.Entity("WebApplication.Models.Prediagnostico_Refacciones", b =>
                {
                    b.HasOne("WebApplication.Models.Prediagnostico", "prediagnostico")
                        .WithMany("refacciones")
                        .HasForeignKey("id_prediagnostico")
                        .HasConstraintName("ForeignKey_Prediagnostico_Refacciones")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Producto_Check_List_Respuestas", b =>
                {
                    b.HasOne("WebApplication.Models.Visita", "visita")
                        .WithMany("producto_check_List_respuestas")
                        .HasForeignKey("id_vista")
                        .HasConstraintName("ForeignKey_Producto_Check_List_Respuestas")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Producto_Promocion", b =>
                {
                    b.HasOne("WebApplication.Models.Cotizaciones", "cotizaciones")
                        .WithMany("producto_promocion")
                        .HasForeignKey("id_cotizacion")
                        .HasConstraintName("ForeignKey_producto_promocion_cotizaciones")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.Cat_Productos", "Cat_Productos")
                        .WithMany("producto_promocion")
                        .HasForeignKey("id_producto")
                        .HasConstraintName("ForeignKey_producto_promocion_cat_productos")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.promocion", "promocion")
                        .WithMany("producto_promocion")
                        .HasForeignKey("id_promocion")
                        .HasConstraintName("ForeignKey_producto_promocion_promociones")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Productos_Carrito", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_Productos", "Productos")
                        .WithMany("Id_Carritos_Productos")
                        .HasForeignKey("Id_Producto")
                        .HasConstraintName("ForeignKey_Carritos_productos")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.productos_condicion", b =>
                {
                    b.HasOne("WebApplication.Models.promocion", "promocion")
                        .WithMany("productos_condicion")
                        .HasForeignKey("id_promocion")
                        .HasConstraintName("ForeignKey_5productoscondicion_promocion2")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.productos_excluidos", b =>
                {
                    b.HasOne("WebApplication.Models.promocion", "promocion")
                        .WithMany("productos_excluidos")
                        .HasForeignKey("id_promocion")
                        .HasConstraintName("ForeignKey_5productos_excluidos_promocion2")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.ProductosQuejas", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_Productos", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.Quejas", "Queja")
                        .WithMany("ProductosQuejas")
                        .HasForeignKey("QuejaId")
                        .HasConstraintName("FK_ProductosQuejas_Quejas");
                });

            modelBuilder.Entity("WebApplication.Models.promocion", b =>
                {
                    b.HasOne("WebApplication.Models.cat_tipo_condicion", "cat_tipo_condicion")
                        .WithMany("promocion")
                        .HasForeignKey("id_cat_tipo_condicion")
                        .HasConstraintName("ForeignKey_2promocion_condicion2")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.cat_tipos_herencia", "tipos_herencia_promo")
                        .WithMany("promocion")
                        .HasForeignKey("id_tipos_herencia_promo")
                        .HasConstraintName("ForeignKey_1promocion_herencia2")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.promociones_compatibles", b =>
                {
                    b.HasOne("WebApplication.Models.promocion", "promocion")
                        .WithMany("promociones_compatibles")
                        .HasForeignKey("id_promocion")
                        .HasConstraintName("ForeignKey_5promocompatibles1_promocion2")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Propuestas", b =>
                {
                    b.HasOne("WebApplication.Models.Quejas", "Queja")
                        .WithMany("Propuestas")
                        .HasForeignKey("QuejaId")
                        .HasConstraintName("FK_Propuestas_Quejas");
                });

            modelBuilder.Entity("WebApplication.Models.Quejas", b =>
                {
                    b.HasOne("WebApplication.Models.Canales", "Canal")
                        .WithMany()
                        .HasForeignKey("CanalId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.Clientes", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.TipoQueja", "TipoQueja")
                        .WithMany()
                        .HasForeignKey("TipoQuejaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.quejas_servicios", b =>
                {
                    b.HasOne("WebApplication.Models.Servicio", "Servicio")
                        .WithMany("quejas_servicios")
                        .HasForeignKey("id_servicio")
                        .HasConstraintName("ForeignKey_Servicio_Queja")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Rel_Categoria_Producto_Tipo_Producto", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_SubLinea_Producto", "categoria")
                        .WithMany("rel_categoria")
                        .HasForeignKey("id_categoria")
                        .HasConstraintName("ForeignKey_Categoria_Producto_Rel")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.Cat_tipo_servicio", "tipo_servicio")
                        .WithMany("rel_categoria")
                        .HasForeignKey("id_tipo_servicio")
                        .HasConstraintName("ForeignKey_Categoria_Producto_Rel_Tipo_Servicio")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.rel_certificado_producto", b =>
                {
                    b.HasOne("WebApplication.Models.Cer_producto_cliente", "certificado")
                        .WithMany("rel_certificado_producto")
                        .HasForeignKey("id_certificado")
                        .HasConstraintName("ForeignKey_Producto_Cer_Mantenimiento")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.rel_certificado_producto_consumibles", b =>
                {
                    b.HasOne("WebApplication.Models.Cer_consumibles", "consumible")
                        .WithMany("cer_producto_cliente")
                        .HasForeignKey("id_consumible")
                        .HasConstraintName("ForeignKey_Consumible_Mantenimiento")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.rel_certificado_producto", "rel_certificado_producto")
                        .WithMany("rel_certificado_producto_consumibles")
                        .HasForeignKey("id_rel_certificado_producto")
                        .HasConstraintName("ForeignKey_Prodcuto_cer_Mantenimiento")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.rel_consumible_sublinea", b =>
                {
                    b.HasOne("WebApplication.Models.Cer_consumibles", "consumible")
                        .WithMany("rel_consumible_sublinea")
                        .HasForeignKey("id_consumible")
                        .HasConstraintName("ForeignKey_rel_consumible_sublinea")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Rel_servicio_visita_producto", b =>
                {
                    b.HasOne("WebApplication.Models.Visita", "visita")
                        .WithMany("servicio_producto")
                        .HasForeignKey("id_vista")
                        .HasConstraintName("ForeignKey_Rel_Servicio_Producto")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Rel_servicio_visita_Refaccion", b =>
                {
                    b.HasOne("WebApplication.Models.Visita", "visita")
                        .WithMany("servicio_refaccion")
                        .HasForeignKey("id_vista")
                        .HasConstraintName("ForeignKey_Rel_Servicio_Refaccion")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.rel_tecnico_visita", b =>
                {
                    b.HasOne("WebApplication.Models.Tecnicos", "tecnico")
                        .WithMany("rel_tecnico_visita")
                        .HasForeignKey("id_tecnico")
                        .HasConstraintName("ForeignKey_Tecnico_Visita")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.Visita", "visita")
                        .WithMany("rel_tecnico_visita")
                        .HasForeignKey("id_vista")
                        .HasConstraintName("ForeignKey_Visita_Tecnico")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Servicio", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_Categoria_Servicio")
                        .WithMany("servicio")
                        .HasForeignKey("Cat_Categoria_Servicioid");

                    b.HasOne("WebApplication.Models.Cat_estatus_servicio")
                        .WithMany("servicio")
                        .HasForeignKey("Cat_estatus_servicioid");

                    b.HasOne("WebApplication.Models.Clientes", "cliente")
                        .WithMany("servicio")
                        .HasForeignKey("id_cliente")
                        .HasConstraintName("ForeignKey_Servicio_Cliente")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.Cat_solicitado_por", "solicitado_por")
                        .WithMany("servicio")
                        .HasForeignKey("id_solicitado_por")
                        .HasConstraintName("ForeignKey_Servicio_Solicitado_Por")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.Cat_solicitud_via", "solicitud_via")
                        .WithMany("servicio")
                        .HasForeignKey("id_solicitud_via")
                        .HasConstraintName("ForeignKey_Servicio_Solicitud_Via")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.Cat_tipo_servicio", "tipo_servicio")
                        .WithMany("servicio")
                        .HasForeignKey("id_tipo_servicio")
                        .HasConstraintName("ForeignKey_Servicio_TipoServicio")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.Sub_cat_tipo_servicio", "sub_tipo_servicio")
                        .WithMany()
                        .HasForeignKey("sub_tipo_servicioid");
                });

            modelBuilder.Entity("WebApplication.Models.Servicio_Troubleshooting", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_Productos_Estatus_Troubleshooting", "estatus_troubleshooting")
                        .WithMany("servicio_troubleshooting")
                        .HasForeignKey("id_estatus_troubleshooting")
                        .HasConstraintName("ForeignKey_Servicio_Troubleshooting")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.Servicio", "servicio")
                        .WithMany("servicio_troubleshooting")
                        .HasForeignKey("id_servicio")
                        .HasConstraintName("ForeignKey_Servicio_Troubleshooting_Servivo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Sub_cat_tipo_servicio", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_tipo_servicio", "tipo_servicio")
                        .WithMany("Sub_cat_tipo_servicio")
                        .HasForeignKey("id_tipo_servicio")
                        .HasConstraintName("ForeignKey_Servicio_SubTipoServicio")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Tecnicos", b =>
                {
                    b.HasOne("WebApplication.Models.Users", "users")
                        .WithMany("tecnicos")
                        .HasForeignKey("id")
                        .HasConstraintName("ForeignKey_Users_Tecnicos")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.Cat_Tecnicos_Tipo", "tecnicos_Tipo")
                        .WithMany("tecnicos")
                        .HasForeignKey("id_tipo_tecnico")
                        .HasConstraintName("ForeignKey_Users_Tecnicos_Tipo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Tecnicos_Actividad", b =>
                {
                    b.HasOne("WebApplication.Models.Tecnicos", "users")
                        .WithMany("tecnicos_actividad")
                        .HasForeignKey("id_user")
                        .HasConstraintName("ForeignKey_Users_Tecnicos_Actividad")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Tecnicos_Cobertura", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_Area_Cobertura", "cobertura")
                        .WithMany("tecnicos_cobertura")
                        .HasForeignKey("id_cobertura")
                        .HasConstraintName("ForeignKey_Users_Tecnicos_Cobertura_Cat")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.Tecnicos", "users")
                        .WithMany("tecnicos_cobertura")
                        .HasForeignKey("id_user")
                        .HasConstraintName("ForeignKey_Users_Tecnicos_Cobertura")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Tecnicos_Producto", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_SubLinea_Producto", "producto")
                        .WithMany("tecnicos_producto")
                        .HasForeignKey("id_categoria_producto")
                        .HasConstraintName("ForeignKey_Users_Tecnicos_Producto_Cat")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.Tecnicos", "users")
                        .WithMany("tecnicos_producto")
                        .HasForeignKey("id_user")
                        .HasConstraintName("ForeignKey_Users_Tecnicos_Productos")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Users", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_Aplicaciones", "App")
                        .WithMany("users")
                        .HasForeignKey("id_app")
                        .HasConstraintName("ForeignKey_Users_App")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.Cat_Roles", "Rol")
                        .WithMany("users")
                        .HasForeignKey("id_rol")
                        .HasConstraintName("ForeignKey_Users_Rol")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Vendedores", b =>
                {
                    b.HasOne("WebApplication.Models.Cat_Estado", "estado")
                        .WithMany("Id_Estado_Vendedores")
                        .HasForeignKey("id_estado")
                        .HasConstraintName("ForeignKey_Vendedores_Estado")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication.Models.Cat_Municipio", "municipio")
                        .WithMany("Id_Municipio_Vendedores")
                        .HasForeignKey("id_municipio")
                        .HasConstraintName("ForeignKey_Vendedores_Mun")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication.Models.Visita", b =>
                {
                    b.HasOne("WebApplication.Models.Tecnicos")
                        .WithMany("visita")
                        .HasForeignKey("Tecnicosid");

                    b.HasOne("WebApplication.Models.Servicio", "servicio")
                        .WithMany("visita")
                        .HasForeignKey("id_servicio")
                        .HasConstraintName("ForeignKey_Servicio_Visita")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
